"""
Django settings for rota project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import yaml


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Reading local config.yml
CONFIG = {}
try:
    with open(os.path.join(os.path.dirname(BASE_DIR), 'config.yml')) as _f:
        CONFIG = yaml.load(_f.read(), yaml.BaseLoader)
except:
    print('WARNING: config.yml not found.')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 't^m=tkdwyr3f0=awp^pmivi6tknri@28t20uc!okwkxifd2gi%'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = CONFIG.get('debug', False)

ALLOWED_HOSTS = ['*', 'www.rotafestival.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'panel',
    'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'core.middleware.menu',
    'panel.middleware.auth',
]

ROOT_URLCONF = 'rota.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.default',
            ],
        },
    },
]

WSGI_APPLICATION = 'rota.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

try:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': CONFIG['mysql']['host'],
            'USER': CONFIG['mysql']['user'],
            'PASSWORD': CONFIG['mysql']['pass'],
            'NAME': CONFIG['mysql']['name'],
        }
    }
except:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': '127.0.0.1',
            'USER': 'rota',
            'PASSWORD': '123456',
            'NAME': 'rota',
        }
    }



# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'pt-BR'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),
    os.path.join(os.path.dirname(BASE_DIR), 'uploads')]

UPLOAD_DIR = os.path.join(BASE_DIR, 'static', 'uploads')
CONVIDADOS_DIR = os.path.join(BASE_DIR, 'static', 'convidados')

SESSION_SAVE_EVERY_REQUEST = True
